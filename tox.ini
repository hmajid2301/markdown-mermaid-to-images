[tox]
envlist =
        py36, py37, py38, lint, isort, black, bumpversion, pypi-upload, pypi-check, coverage

[testenv]
description = Run environment
basepython =
        {lint,isort,black,bumpversion,pypi-upload,pypi-check,coverage}: {env:TOXPYTHON:python3}
        py36: {env:TOXPYTHON:python3.6}
        py37: {env:TOXPYTHON:python3.7}
        py38: {env:TOXPYTHON:python3.8}
setenv = PYTHONPATH={toxinidir}/tests
install_command = pip install {opts} {packages}
deps =
        pytest
        pytest-mock
usedevelop = false
commands = py.test -v {posargs} tests

[testenv:dev]
basepython = python3
usedevelop = True
deps = -rdev-requirements.txt
envdir=.venv
commands =

[testenv:isort]
description = Sort imports according to PEP rules
skip_install = true
deps = isort
commands = isort --recursive src tests setup.py

[testenv:lint]
skip_install = true
deps = flake8
        flake8-blind-except
        flake8-builtins
        flake8-colors
        flake8-logging-format
        isort
commands = 
        isort --check-only --diff --recursive src tests setup.py
        flake8 src/

[testenv:black]
skip_install = true
deps = black
commands = black {posargs} --line-length 120 src/

[testenv:bumpversion]
skip_install = true
deps = bumpversion
commands = bumpversion --allow-dirty --verbose {posargs}

[testenv:coverage]
deps =
    pytest
    pytest-mock
    pytest-cov
    coverage==4.5.4
commands =
    py.test --cov-report= --cov=markdown_mermaid_to_images tests
    coverage combine .coverage
    coverage report -m

[testenv:pypi-check]
skip_install = true
deps = twine
commands = twine check dist/*

[testenv:pypi-upload]
skip_install = true
deps = twine
setenv =
        TWINE_USERNAME={env:PYPI_PRODUCTION_USERNAME}
        TWINE_PASSWORD={env:PYPI_PRODUCTION_PASSWORD}
commands = twine upload {posargs} dist/*
